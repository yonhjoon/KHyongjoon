DROP SEQUENCE SEQ_USERNO;
DROP SEQUENCE SEQ_GOODSID;
DROP SEQUENCE SEQ_REVIEWID;
DROP SEQUENCE SEQ_FILENO;
DROP SEQUENCE SEQ_POSTID;
DROP SEQUENCE SEQ_KEY1;
DROP SEQUENCE SEQ_FAQID;
DROP SEQUENCE SEQ_REQUESTNO;
DROP SEQUENCE SEQ_REPLYNO;
DROP SEQUENCE SEQ_NREPLYNO;

DROP TABLE NREPLY;
DROP TABLE REPLY;
DROP TABLE REQUEST;
DROP TABLE FAQ;
DROP TABLE COMMENTS;
DROP TABLE BOARD;
DROP TABLE ATTACHMENT;
DROP TABLE PRICE_OFFERS;
DROP TABLE TRADE_REVIEWS;
DROP TABLE EVALUATION_ITEMS;
DROP TABLE WISH_LIST;
DROP TABLE PRODUCT;
DROP TABLE CATE_MIDDLE;
DROP TABLE CATE_TOP;
DROP TABLE MEMBER;

CREATE TABLE MEMBER (
    USER_NO NUMBER NOT NULL,
    USER_ID VARCHAR2(15) NOT NULL,
    USER_PWD VARCHAR2(15) NOT NULL,
    NICKNAME VARCHAR2(15),
    AUTHORITY CHAR(10) DEFAULT 'USER' NOT NULL,
    PHONE VARCHAR2(11) NOT NULL,
    ACTIVATED CHAR(1) DEFAULT 'N' NOT NULL,
    SCORE NUMBER(3,1) NOT NULL,
    JOIN_DATE DATE DEFAULT SYSDATE NOT NULL,
    GENDER CHAR(1),
    EMAIL VARCHAR(30),
    LOCATION VARCHAR(30)
);

CREATE TABLE CATE_TOP (
    CATEGORY_ID VARCHAR2(40) NOT NULL
);

CREATE TABLE CATE_MIDDLE (
    CATEGORY_M VARCHAR2(40) NOT NULL,
    CATEGORY_T VARCHAR2(40) NOT NULL
);

CREATE TABLE PRODUCT (
    GOODS_ID NUMBER NOT NULL,
    SELLER_NO NUMBER NOT NULL,
    CATEGORY_M VARCHAR2(40) NOT NULL,
    TITLE VARCHAR2(100) NOT NULL,
    STATUS CHAR(20) DEFAULT '판매중' NOT NULL,
    SELL_PRICE NUMBER NULL,
    VIEW_COUNT NUMBER DEFAULT 0 NOT NULL,
    P_EXPLAIN VARCHAR2(300) NOT NULL,
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    LOVEIT NUMBER DEFAULT 0 NOT NULL,
    RETURN_PD CHAR(1) DEFAULT 'N' NOT NULL,
    LOCATION_T VARCHAR2(20) NOT NULL,
    PRODUCT_STATUS VARCHAR2(30) NOT NULL,
    NICKNAME VARCHAR2(15),
    SCORE NUMBER(3,1)
);

CREATE TABLE WISH_LIST (
    USER_NO NUMBER NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    WISH_DATE DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE TRADE_REVIEWS (
    REVIEW_ID NUMBER NOT NULL,
    SELLER_NO NUMBER NOT NULL,
    BUYER_NO NUMBER NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    MESSAGE VARCHAR2(255) NOT NULL,
    FIELD_SCORE NUMBER NOT NULL,
    REVIEW_DATE DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE EVALUATION_ITEMS (
    FIELD_SCORE NUMBER NOT NULL,
    KIND VARCHAR2(1) NOT NULL,
    FAST_ANSWER VARCHAR2(1) NOT NULL,
    TIME_APPOINTMENT VARCHAR2(1) NOT NULL,
    PRODUCT_STATUS VARCHAR2(1) NOT NULL,
    DETAIL_EXPLAIN VARCHAR2(1) NOT NULL,
    CHEAP VARCHAR2(1) NOT NULL
);

CREATE TABLE PRICE_OFFERS (
    PRICE_OFFER_ID NUMBER NOT NULL,
    OFFER_USER_NO NUMBER NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    OFFERED_PRICE NUMBER NOT NULL,
    ACCEPT_OR_NOT CHAR(1) DEFAULT 'N' NOT NULL,
    OFFER_DATE DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE ATTACHMENT (
    FILE_NO NUMBER NOT NULL,
    REF_BNO NUMBER NOT NULL,
    UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL,
    FILE_LEVEL NUMBER NOT NULL,
    FILE_PATH VARCHAR2(200),
    ORIGIN_NAME VARCHAR2(200) NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    CHANGE_NAME VARCHAR2(200)
);

CREATE TABLE BOARD (
    POST_ID NUMBER NOT NULL,
    USER_NO NUMBER NOT NULL,
    FILE_NO NUMBER NOT NULL,
    CATEGORY_ID VARCHAR2(40) NOT NULL,
    WRITE_DATE DATE DEFAULT SYSDATE NOT NULL,
    TITLE_ID VARCHAR2(100) NOT NULL,
    DETAIL_ID VARCHAR2(255) NULL,
    EYES NUMBER DEFAULT 0 NOT NULL,
    MIND NUMBER DEFAULT 0 NOT NULL
);

CREATE TABLE COMMENTS (
    KEY1 VARCHAR2(255) NOT NULL,
    USER_NO NUMBER NOT NULL,
    GOODS_ID NUMBER NULL,
    POST_ID NUMBER NOT NULL,
    CONTENT VARCHAR2(255) NOT NULL,
    COMMENTS_DATE DATE DEFAULT SYSDATE NOT NULL,
    KEY2 VARCHAR2(255) NOT NULL
);

CREATE TABLE FAQ (
    FAQ_ID NUMBER NOT NULL,
    USER_NO NUMBER NOT NULL,
    FAQ_TITLE VARCHAR2(90) NOT NULL,
    ANSWER VARCHAR2(1000) NOT NULL,
    FAQ_CONTENTS VARCHAR2(1000) NOT NULL,
    FAQ_DATE DATE DEFAULT SYSDATE NOT NULL
);

CREATE TABLE REQUEST (
    REQUEST_NO NUMBER NOT NULL,
    REQUEST_PRICE NUMBER NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    REQUEST_WRITER NUMBER NOT NULL,
    REQUEST_DATE DATE DEFAULT SYSDATE NOT NULL,
    NICKNAME VARCHAR2(15),
    SCORE NUMBER(3,1)
);

CREATE TABLE REPLY (
    REPLY_NO NUMBER NOT NULL,
    REPLY_CONTENT VARCHAR2(400) NOT NULL,
    GOODS_ID NUMBER NOT NULL,
    REPLY_WRITER NUMBER NOT NULL,
    REPLY_DATE DATE DEFAULT SYSDATE NOT NULL,
    NICKNAME VARCHAR2(15),
    SCORE NUMBER(3,1)
);

CREATE TABLE NREPLY (
    NREPLY_NO NUMBER NOT NULL,
    NREPLY_CONTENT VARCHAR2(400) NOT NULL,
    REPLY_NO NUMBER NOT NULL,
    NREPLY_WRITER NUMBER NOT NULL,
    NREPLY_DATE DATE DEFAULT SYSDATE NOT NULL
);

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (USER_NO);
ALTER TABLE MEMBER ADD CONSTRAINT MEM_NICKNAME_UQ UNIQUE (NICKNAME);
ALTER TABLE MEMBER ADD CONSTRAINT MEM_SCORE_UQ UNIQUE (SCORE);

ALTER TABLE CATE_TOP ADD CONSTRAINT PK_CATE_TOP PRIMARY KEY (CATEGORY_ID);

ALTER TABLE CATE_MIDDLE ADD CONSTRAINT PK_CATE_MIDDLE PRIMARY KEY (CATEGORY_M);
ALTER TABLE CATE_MIDDLE ADD CONSTRAINT FK_CATEGORY_TO_MIDDLE FOREIGN KEY (CATEGORY_T) REFERENCES CATE_TOP (CATEGORY_ID);

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (GOODS_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_SELLER_TO_PRODUCT FOREIGN KEY (SELLER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_CATEGORY_TO_PRODUCT FOREIGN KEY (CATEGORY_M) REFERENCES CATE_MIDDLE (CATEGORY_M);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_SCORE_TO_PRODUCT FOREIGN KEY (SCORE) REFERENCES MEMBER (SCORE);

ALTER TABLE WISH_LIST ADD CONSTRAINT PK_WISH_LIST PRIMARY KEY (USER_NO, GOODS_ID);
ALTER TABLE WISH_LIST ADD CONSTRAINT FK_MEMBER_TO_WISH_LIST FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE WISH_LIST ADD CONSTRAINT FK_PRODUCT_TO_WISH_LIST FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);

ALTER TABLE EVALUATION_ITEMS ADD CONSTRAINT PK_EVALUATION_ITEMS PRIMARY KEY (FIELD_SCORE);

ALTER TABLE TRADE_REVIEWS ADD CONSTRAINT PK_TRADE_REVIEWS PRIMARY KEY (REVIEW_ID);
ALTER TABLE TRADE_REVIEWS ADD CONSTRAINT FK_SELLER_REVIEWS FOREIGN KEY (SELLER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE TRADE_REVIEWS ADD CONSTRAINT FK_BUYER_REVIEWS FOREIGN KEY (BUYER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE TRADE_REVIEWS ADD CONSTRAINT FK_GOODS_REVIEWS FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);
ALTER TABLE TRADE_REVIEWS ADD CONSTRAINT FK_EVALUATION_REVIEWS FOREIGN KEY (FIELD_SCORE) REFERENCES EVALUATION_ITEMS (FIELD_SCORE);

ALTER TABLE PRICE_OFFERS ADD CONSTRAINT PK_PRICE_OFFERS PRIMARY KEY (PRICE_OFFER_ID);
ALTER TABLE PRICE_OFFERS ADD CONSTRAINT FK_OFFER_USER_TO_PRICE_OFFERS FOREIGN KEY (OFFER_USER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE PRICE_OFFERS ADD CONSTRAINT FK_GOODS_TO_PRICE_OFFERS FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);

ALTER TABLE ATTACHMENT ADD CONSTRAINT PK_ATTACHMENT PRIMARY KEY (FILE_NO);
ALTER TABLE ATTACHMENT ADD CONSTRAINT FK_GOODS_TO_ATTACHMENT FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (POST_ID);
ALTER TABLE BOARD ADD CONSTRAINT FK_USER_TO_BOARD FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE BOARD ADD CONSTRAINT FK_FILE_TO_BOARD FOREIGN KEY (FILE_NO) REFERENCES ATTACHMENT (FILE_NO);
ALTER TABLE BOARD ADD CONSTRAINT FK_CATEGORY_TO_BOARD FOREIGN KEY (CATEGORY_ID) REFERENCES CATE_TOP (CATEGORY_ID);

ALTER TABLE COMMENTS ADD CONSTRAINT PK_COMMENTS PRIMARY KEY (KEY1);
ALTER TABLE COMMENTS ADD CONSTRAINT FK_USER_TO_COMMENTS FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO);
ALTER TABLE COMMENTS ADD CONSTRAINT FK_GOODS_TO_COMMENTS FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);
ALTER TABLE COMMENTS ADD CONSTRAINT FK_POST_TO_COMMENTS FOREIGN KEY (POST_ID) REFERENCES BOARD (POST_ID);
ALTER TABLE COMMENTS ADD CONSTRAINT FK_PARENT_COMMENT_TO_COMMENTS FOREIGN KEY (KEY2) REFERENCES COMMENTS (KEY1);

ALTER TABLE FAQ ADD CONSTRAINT PK_FAQ PRIMARY KEY (FAQ_ID);
ALTER TABLE FAQ ADD CONSTRAINT FK_USER_TO_FAQ FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO);

ALTER TABLE REQUEST ADD CONSTRAINT PK_REQUEST PRIMARY KEY (REQUEST_NO);
ALTER TABLE REQUEST ADD CONSTRAINT FK_PRODUCT_TO_REQUEST FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);
ALTER TABLE REQUEST ADD CONSTRAINT FK_MEMBER_TO_REQUEST FOREIGN KEY(REQUEST_WRITER) REFERENCES MEMBER (USER_NO);

ALTER TABLE REPLY ADD CONSTRAINT PK_REPLY PRIMARY KEY (REPLY_NO);
ALTER TABLE REPLY ADD CONSTRAINT FK_PRODUCT_TO_REPLY FOREIGN KEY (GOODS_ID) REFERENCES PRODUCT (GOODS_ID);
ALTER TABLE REPLY ADD CONSTRAINT FK_MEMBER_TO_REPLY FOREIGN KEY(REPLY_WRITER) REFERENCES MEMBER (USER_NO);

ALTER TABLE NREPLY ADD CONSTRAINT PK_NREPLY PRIMARY KEY (NREPLY_NO);
ALTER TABLE NREPLY ADD CONSTRAINT FK_REPLY_TO_NREPLY FOREIGN KEY (REPLY_NO) REFERENCES REPLY (REPLY_NO);

COMMENT ON COLUMN ATTACHMENT.FILE_NO IS '첨부파일넘버';
COMMENT ON COLUMN ATTACHMENT.REF_BNO IS '참조게시글번호';
COMMENT ON COLUMN ATTACHMENT.UPLOAD_DATE IS '업로드일';
COMMENT ON COLUMN ATTACHMENT.FILE_LEVEL IS '파일레벨';
COMMENT ON COLUMN ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN ATTACHMENT.FILE_PATH IS '원본파일명';
COMMENT ON COLUMN ATTACHMENT.GOODS_ID IS '상품ID';
COMMENT ON COLUMN ATTACHMENT.CHANGE_NAME IS '바뀐 파일명';

COMMENT ON COLUMN BOARD.POST_ID IS '게시글ID';
COMMENT ON COLUMN BOARD.USER_NO IS '회원번호';
COMMENT ON COLUMN BOARD.FILE_NO IS '파일번호';
COMMENT ON COLUMN BOARD.CATEGORY_ID IS '카테고리TOP';
COMMENT ON COLUMN BOARD.WRITE_DATE IS '작성날짜';
COMMENT ON COLUMN BOARD.TITLE_ID IS '제목';
COMMENT ON COLUMN BOARD.DETAIL_ID IS '내용';
COMMENT ON COLUMN BOARD.EYES IS '조회수';
COMMENT ON COLUMN BOARD.MIND IS '추천';

COMMENT ON COLUMN CATE_MIDDLE.CATEGORY_M IS '카테고리MID';
COMMENT ON COLUMN CATE_MIDDLE.CATEGORY_T IS '카테고리TOP';

COMMENT ON COLUMN CATE_TOP.CATEGORY_ID IS '카테고리TOP';

COMMENT ON COLUMN COMMENTS.KEY1 IS '댓글기본키';
COMMENT ON COLUMN COMMENTS.USER_NO IS '회원번호';
COMMENT ON COLUMN COMMENTS.GOODS_ID IS '상품ID';
COMMENT ON COLUMN COMMENTS.POST_ID IS '게시글ID';
COMMENT ON COLUMN COMMENTS.CONTENT IS '내용';
COMMENT ON COLUMN COMMENTS.COMMENTS_DATE IS '작성일자';
COMMENT ON COLUMN COMMENTS.KEY2 IS '셀프조인키';

COMMENT ON COLUMN FAQ.FAQ_ID IS '문의ID';
COMMENT ON COLUMN FAQ.USER_NO IS '회원번호';
COMMENT ON COLUMN FAQ.FAQ_TITLE IS '문의제목';
COMMENT ON COLUMN FAQ.ANSWER IS '답변';
COMMENT ON COLUMN FAQ.FAQ_CONTENTS IS '문의내용';
COMMENT ON COLUMN FAQ.FAQ_DATE IS '문의날짜';

COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.NICKNAME IS '닉네임';
COMMENT ON COLUMN MEMBER.AUTHORITY IS '회원권한';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.ACTIVATED IS '탈퇴여부';
COMMENT ON COLUMN MEMBER.SCORE IS '평가점수';
COMMENT ON COLUMN MEMBER.JOIN_DATE IS '가입일자';
COMMENT ON COLUMN MEMBER.GENDER IS '성별';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.LOCATION IS '지역';

COMMENT ON COLUMN PRICE_OFFERS.PRICE_OFFER_ID IS '가격제시ID';
COMMENT ON COLUMN PRICE_OFFERS.OFFER_USER_NO IS '제시회원번호';
COMMENT ON COLUMN PRICE_OFFERS.GOODS_ID IS '상품ID';
COMMENT ON COLUMN PRICE_OFFERS.OFFERED_PRICE IS '제시가액';
COMMENT ON COLUMN PRICE_OFFERS.ACCEPT_OR_NOT IS '수락여부';
COMMENT ON COLUMN PRICE_OFFERS.OFFER_DATE IS '제시날짜';

COMMENT ON COLUMN PRODUCT.GOODS_ID IS '상품ID';
COMMENT ON COLUMN PRODUCT.SELLER_NO IS '판매자번호';
COMMENT ON COLUMN PRODUCT.CATEGORY_M IS '카테고리중분류';
COMMENT ON COLUMN PRODUCT.TITLE IS '상품제목';
COMMENT ON COLUMN PRODUCT.STATUS IS '판매상태';
COMMENT ON COLUMN PRODUCT.SELL_PRICE IS '판매가액';
COMMENT ON COLUMN PRODUCT.VIEW_COUNT IS '조회수';
COMMENT ON COLUMN PRODUCT.P_EXPLAIN IS '상품설명';
COMMENT ON COLUMN PRODUCT.ENROLL_DATE IS '등록일자';
COMMENT ON COLUMN PRODUCT.LOVEIT IS '찜수';
COMMENT ON COLUMN PRODUCT.RETURN_PD IS '교환여부';
COMMENT ON COLUMN PRODUCT.LOCATION_T IS '거래지역';
COMMENT ON COLUMN PRODUCT.PRODUCT_STATUS IS '상품상태';
COMMENT ON COLUMN PRODUCT.NICKNAME IS '닉네임';
COMMENT ON COLUMN PRODUCT.SCORE IS '매너점수';

COMMENT ON COLUMN TRADE_REVIEWS.REVIEW_ID IS '후기ID';
COMMENT ON COLUMN TRADE_REVIEWS.SELLER_NO IS '판매자번호';
COMMENT ON COLUMN TRADE_REVIEWS.BUYER_NO IS '구매자번호';
COMMENT ON COLUMN TRADE_REVIEWS.GOODS_ID IS '상품ID';
COMMENT ON COLUMN TRADE_REVIEWS.MESSAGE IS '후기메시지';
COMMENT ON COLUMN TRADE_REVIEWS.FIELD_SCORE IS '항목점수';
COMMENT ON COLUMN TRADE_REVIEWS.REVIEW_DATE IS '거래날짜';

COMMENT ON COLUMN EVALUATION_ITEMS.FIELD_SCORE IS '평가항목점수';
COMMENT ON COLUMN EVALUATION_ITEMS.KIND IS '친절해요';
COMMENT ON COLUMN EVALUATION_ITEMS.FAST_ANSWER IS '응답이빨라요';
COMMENT ON COLUMN EVALUATION_ITEMS.TIME_APPOINTMENT IS '시간약속을잘지켜요';
COMMENT ON COLUMN EVALUATION_ITEMS.PRODUCT_STATUS IS '상품상태가설명과같아요';
COMMENT ON COLUMN EVALUATION_ITEMS.DETAIL_EXPLAIN IS '설명이자세해요';
COMMENT ON COLUMN EVALUATION_ITEMS.CHEAP IS '저렴하게판매해요';

COMMENT ON COLUMN WISH_LIST.USER_NO IS '회원번호';
COMMENT ON COLUMN WISH_LIST.GOODS_ID IS '상품ID';
COMMENT ON COLUMN WISH_LIST.WISH_DATE IS '관심날짜';

COMMENT ON COLUMN REQUEST.REQUEST_NO IS '신청번호';
COMMENT ON COLUMN REQUEST.REQUEST_PRICE IS '신청가격';
COMMENT ON COLUMN REQUEST.GOODS_ID IS '제품아이디';
COMMENT ON COLUMN REQUEST.REQUEST_WRITER IS '신청회원아이디';
COMMENT ON COLUMN REQUEST.REQUEST_DATE IS '신청날짜';
COMMENT ON COLUMN REQUEST.NICKNAME IS '닉네임';
COMMENT ON COLUMN REQUEST.SCORE IS '매너점수';

COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.GOODS_ID IS '제품아이디';
COMMENT ON COLUMN REPLY.REPLY_WRITER IS '댓글작성자아이디';
COMMENT ON COLUMN REPLY.REPLY_DATE IS '댓글작성날짜';
COMMENT ON COLUMN REPLY.NICKNAME IS '닉네임';
COMMENT ON COLUMN REPLY.SCORE IS '매너점수';

COMMENT ON COLUMN NREPLY.NREPLY_NO IS '대댓글번호';
COMMENT ON COLUMN NREPLY.NREPLY_CONTENT IS '대댓글내용';
COMMENT ON COLUMN NREPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN NREPLY.NREPLY_WRITER IS '대댓글작성자아이디';
COMMENT ON COLUMN NREPLY.NREPLY_DATE IS '대댓글작성날짜';

CREATE SEQUENCE SEQ_USERNO NOCACHE;
CREATE SEQUENCE SEQ_GOODSID NOCACHE;
CREATE SEQUENCE SEQ_REVIEWID NOCACHE;
CREATE SEQUENCE SEQ_FILENO NOCACHE;
CREATE SEQUENCE SEQ_POSTID NOCACHE;
CREATE SEQUENCE SEQ_KEY1 NOCACHE;
CREATE SEQUENCE SEQ_FAQID NOCACHE;
CREATE SEQUENCE SEQ_REQUESTNO NOCACHE;
CREATE SEQUENCE SEQ_REPLYNO NOCACHE;
CREATE SEQUENCE SEQ_NREPLYNO NOCACHE;

INSERT INTO MEMBER VALUES(SEQ_USERNO.NEXTVAL, 'admin', 'admin', '닉네임', 'admin', '01011112222', DEFAULT, 99, DEFAULT, NULL, NULL, NULL);
INSERT INTO CATE_TOP VALUES('컴퓨터-주요부품');
INSERT INTO CATE_MIDDLE VALUES('CPU', '컴퓨터-주요부품');
INSERT INTO PRODUCT VALUES(SEQ_GOODSID.NEXTVAL, 1, 'CPU', '5700X3D', DEFAULT, 21000, DEFAULT, '아직오지않은 CPU...', DEFAULT, DEFAULT, DEFAULT, '서울', '새상품', '닉네임', 99);
INSERT INTO WISH_LIST VALUES(1, 1, DEFAULT);
INSERT INTO EVALUATION_ITEMS VALUES(80, 'N', 'N', 'N', 'N', 'N', 'N');
INSERT INTO TRADE_REVIEWS VALUES(SEQ_REVIEWID.NEXTVAL, 1, 1, 1, '이뻐요', 80, DEFAULT);
INSERT INTO PRICE_OFFERS VALUES(1, 1, 1, 242, DEFAULT, DEFAULT);
INSERT INTO ATTACHMENT VALUES(SEQ_FILENO.NEXTVAL, 1, DEFAULT, 1, 'ORIGINPATH', 'ORIGINNAME', 1, 'CHANGENAME');
INSERT INTO BOARD VALUES(SEQ_POSTID.NEXTVAL, 1, 1, '컴퓨터-주요부품', DEFAULT, 'CPU팝니다', 'CPU삽니다', DEFAULT, DEFAULT);
INSERT INTO COMMENTS VALUES(SEQ_KEY1.NEXTVAL, 1, 1, 1, '내용', DEFAULT, 1);
INSERT INTO FAQ VALUES(SEQ_FAQID.NEXTVAL, 1, '사기꾼녀석', '너도사기꾼', '나는 억울해', DEFAULT);
INSERT INTO REQUEST VALUES(SEQ_REQUESTNO.NEXTVAL, 3000, 1, 1, DEFAULT, '닉네임', 99);
INSERT INTO REPLY VALUES(SEQ_REPLYNO.NEXTVAL, '네고 가능?', 1, 1, DEFAULT, '닉네임', 99);
INSERT INTO NREPLY VALUES(SEQ_NREPLYNO.NEXTVAL, '불가', 1, 1, DEFAULT);

COMMIT;