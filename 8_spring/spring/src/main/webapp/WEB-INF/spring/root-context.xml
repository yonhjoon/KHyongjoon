<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		root-context.xml
		서버구동과 동시에 web.xml을 거쳐서 바로 로딩되는 문서
		=> 서버구동과 동시에 바로 세팅(빈으로 등록) 해야되는 내용들을 작성하면 된다.
		DB연결 설정, 트렌젝션처리, 내외부 모듈연동 등등
	 -->
	 
	 <!-- 커넥션풀을 쓸수있는 클래스등록 -->
	 <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	 	<property name="username" value="spring"/>
	 	<property name="password" value="spring"/>
	 </bean>
	 
	 <!-- 
	 	* oracle 세팅*
	 	
	 	BasicDataSource dataSource = new BasicDataSource();
	 	dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
	 	dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
	 	dataSource.setUsername("spring");
	 	dataSource.setPassword("spring");
	 	...
	 	와 같다
	  -->
	  
	  <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	 	<property name="dataSource" ref="dataSource"/>
	  </bean>
	  
	  <!-- 
	  	* myBatis 세팅*
	  	
	  	SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
	  	sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
	  	sqlSessionFactory.setConfigLocation(dataSource);
	   -->
	   
	   <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	   		<constructor-arg ref="sqlSessionFactory"/>
	   </bean>
	 
	 <!-- 
	 	SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	  -->
	 
	 
</beans>
